datasets:
  coco2017:
    name: &dataset_name 'coco2017'
    type: 'cocodetect'
    root: &root_dir !join ['~/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &coco_train !join [*dataset_name, '/train']
        images: !join [*root_dir, '/train2017']
        annotations: !join [*root_dir, '/annotations/instances_train2017.json']
        annotated_only: True
        random_horizontal_flip: 0.5
      val:
        dataset_id: &coco_val !join [*dataset_name, '/val']
        images: !join [*root_dir, '/val2017']
        annotations: !join [*root_dir, '/annotations/instances_val2017.json']
        annotated_only: False

models:
  teacher_model:
    name: &teacher_model_name 'fasterrcnn_resnet50_fpn'
    params:
      pretrained: True
      progress: True
      num_classes: 91
      pretrained_backbone: True
    experiment: &teacher_experiment !join [*dataset_name, '-', *teacher_model_name]
    ckpt: !join ['./resource/ckpt/coco2017/teacher/', *teacher_experiment, '.pt']
  student_model:
    name: 'faster_rcnn_model'
    params:
      pretrained: True
      pretrained_backbone_name: 'resnet50'
      progress: True
      num_classes: 91
      backbone_config:
        name: 'splittable_resnet'
        params:
          num_classes: 1000
          pretrained: True
          bottleneck_config:
            name: 'larger_resnet_bottleneck'
            params:
              bottleneck_channel: &bch 9
              bottleneck_idx: 12
              output_channel: 256
              compressor_transform_params:
                - type: 'SimpleQuantizer'
                  params:
                    num_bits: 8
              decompressor_transform_params:
                - type: 'SimpleDequantizer'
                  params:
                    num_bits: 8
          resnet_name: 'resnet50'
          pre_transform_params:
          skips_avgpool: True
          skips_fc: True
        ckpt:
      backbone_fpn_kwargs:
        return_layer_dict:
          bottleneck_layer: '1'
          layer2: '2'
          layer3: '3'
          layer4: '4'
        in_channels_list: [256, 512, 1024, 2048]
        out_channels: 256
        analysis_config:
          analyzes_after_compress: True
          analyzer_configs:
            - type: 'FileSizeAnalyzer'
              params:
                unit: 'KB'
        analyzable_layer_key: 'bottleneck_layer'
      start_ckpt_file_path:
    experiment: &student_experiment !join [*dataset_name, '-faster_rcnn_resnet50-bq', *bch, 'ch_fpn_from_faster_rcnn_resnet50_fpn']
    ckpt: !join ['./resource/ckpt/coco2017/supervised_compression/ghnd-bq/', *student_experiment, '.pt']

train:
  log_freq: 1000
  epoch_to_update: &epoch_to_update 20
  num_epochs: *epoch_to_update
  train_data_loader:
    dataset_id: *coco_train
    random_sample: True
    num_workers: 8
    batch_sampler:
      type: 'GroupedBatchSampler'
      params:
        aspect_ratio_group_factor: 3
        batch_size: 4
    collate_fn: 'coco_collate_fn'
    cache_output:
  val_data_loader:
    dataset_id: *coco_val
    random_sample: False
    batch_size: 1
    num_workers: 8
    collate_fn: 'coco_collate_fn'
  teacher:
    forward_proc: 'forward_batch'
    sequential: []
    special:
      type: 'HeadRCNN'
      params:
        head_rcnn:
          sequential: ['backbone.body']
    frozen_modules: []
    forward_hook:
      input: []
      output: ['seq.backbone.body.layer1', 'seq.backbone.body.layer2', 'seq.backbone.body.layer3', 'seq.backbone.body.layer4']
    wrapper: 'DataParallel'
    requires_grad: False
  student:
    forward_proc: 'forward_batch'
    adaptations:
    sequential: []
    special:
      type: 'HeadRCNN'
      params:
        head_rcnn:
          sequential: ['backbone.body']
    frozen_modules: []
    forward_hook:
      input: []
      output: ['seq.backbone.body.bottleneck_layer', 'seq.backbone.body.layer2', 'seq.backbone.body.layer3', 'seq.backbone.body.layer4']
    wrapper: 'DistributedDataParallel'
    requires_grad: True
  optimizer:
    type: 'Adam'
    params:
      lr: 0.001
  scheduler:
    type: 'MultiStepLR'
    params:
      milestones: [5, 15]
      gamma: 0.1
  criterion:
    type: 'GeneralizedCustomLoss'
    org_term:
      factor: 0.0
    sub_terms:
      layer1:
        criterion:
          type: 'MSELoss'
          params:
            reduction: 'sum'
        params:
          input:
            is_from_teacher: False
            module_path: 'seq.backbone.body.bottleneck_layer'
            io: 'output'
          target:
            is_from_teacher: True
            module_path: 'seq.backbone.body.layer1'
            io: 'output'
        factor: 1.0
      layer2:
        criterion:
          type: 'MSELoss'
          params:
            reduction: 'sum'
        params:
          input:
            is_from_teacher: False
            module_path: 'seq.backbone.body.layer2'
            io: 'output'
          target:
            is_from_teacher: True
            module_path: 'seq.backbone.body.layer2'
            io: 'output'
        factor: 1.0
      layer3:
        criterion:
          type: 'MSELoss'
          params:
            reduction: 'sum'
        params:
          input:
            is_from_teacher: False
            module_path: 'seq.backbone.body.layer3'
            io: 'output'
          target:
            is_from_teacher: True
            module_path: 'seq.backbone.body.layer3'
            io: 'output'
        factor: 1.0
      layer4:
        criterion:
          type: 'MSELoss'
          params:
            reduction: 'sum'
        params:
          input:
            is_from_teacher: False
            module_path: 'seq.backbone.body.layer4'
            io: 'output'
          target:
            is_from_teacher: True
            module_path: 'seq.backbone.body.layer4'
            io: 'output'
        factor: 1.0

test:
  test_data_loader:
    dataset_id: *coco_val
    random_sample: False
    batch_size: 1
    num_workers: 8
    collate_fn: 'coco_collate_fn'

datasets:
  pascal_voc:
    name: &dataset_name 'pascal_voc2012'
    type: 'VOCSegmentation'
    root: &root_dir '~/dataset'
    splits:
      train:
        dataset_id: &pascal_train !join [*dataset_name, '/train']
        params:
          root: *root_dir
          image_set: 'train'
          year: '2012'
          download: False
          transforms_compose_cls: 'CustomCompose'
          transforms_params:
            - type: 'CustomRandomResize'
              params:
                min_size: 256
                max_size: 1026
            - type: 'CustomRandomHorizontalFlip'
              params:
                p: 0.5
            - type: 'CustomRandomCrop'
              params:
                size: 513
            - type: 'CustomToTensor'
              params:
            - &normalize
              type: 'CustomNormalize'
              params:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
      val:
        dataset_id: &pascal_val !join [*dataset_name, '/val']
        params:
          root: *root_dir
          image_set: 'val'
          year: '2012'
          download: False
          transforms_compose_cls: 'CustomCompose'
          transforms_params: &val_transform
            - type: 'CustomRandomResize'
              params:
                min_size: 513
                max_size: 513
            - type: 'CustomToTensor'
              params:
                converts_sample: True
                converts_target: True
            - *normalize

models:
  teacher_model:
    name: &teacher_model_name 'deeplabv3_resnet50'
    params:
      pretrained: True
      pretrained_backbone: True
      num_classes: 21
      aux_loss: True
    ckpt: 'https://github.com/yoshitomo-matsubara/torchdistill/releases/download/v0.2.8/pascal_voc2012-deeplabv3_resnet50.pt'
  student_model:
    name: 'deeplabv3_model'
    params:
      pretrained: True
      pretrained_backbone_name: 'resnet50'
      num_classes: 21
      uses_aux: True
      num_input_channels: 2048
      num_aux_channels: 1024
      return_layer_dict:
        layer3: 'aux'
        layer4: 'out'
      analysis_config:
        analyzes_after_compress: True
        analyzer_configs:
          - type: 'FileSizeAnalyzer'
            params:
              unit: 'KB'
      analyzable_layer_key: 'bottleneck_layer'
      backbone_config:
        name: 'splittable_resnet'
        params:
          num_classes: 1000
          pretrained: True
          replace_stride_with_dilation: [False, True, True]
          bottleneck_config:
            name: 'larger_resnet_bottleneck'
            params:
              bottleneck_channel: &bch 3
              bottleneck_idx: 12
              output_channel: 256
              compressor_transform_params:
                - type: 'SimpleQuantizer'
                  params:
                    num_bits: 8
              decompressor_transform_params:
                - type: 'SimpleDequantizer'
                  params:
                    num_bits: 8
          resnet_name: 'resnet50'
          pre_transform_params:
          skips_avgpool: True
          skips_fc: True
        ckpt:
      start_ckpt_file_path:
    experiment: &student_experiment !join [*dataset_name, '-deeplabv3_resnet50-bq', *bch, 'ch_from_', *teacher_model_name]
    ckpt: !join ['./resource/ckpt/pascal_voc2012/supervised_compression/ghnd-bq/', *student_experiment, '.pt']

train:
  log_freq: 1000
  epoch_to_update: &epoch_to_update 50
  num_epochs: *epoch_to_update
  train_data_loader:
    dataset_id: *pascal_train
    random_sample: True
    batch_size: 16
    num_workers: 16
    collate_fn: 'pascal_seg_collate_fn'
    cache_output:
  val_data_loader:
    dataset_id: *pascal_val
    random_sample: False
    batch_size: 1
    num_workers: 16
    collate_fn: 'pascal_seg_eval_collate_fn'
  teacher:
    adaptations:
    sequential: ['backbone']
    forward_hook:
      input: []
      output: ['backbone.layer2', 'backbone.layer3', 'backbone.layer4']
    wrapper: 'DistributedDataParallel'
    requires_grad: False
  student:
    adaptations:
    sequential: ['backbone']
    frozen_modules: ['backbone.layer3', 'backbone.layer4']
    forward_hook:
      input: []
      output: ['backbone.layer2', 'backbone.layer3', 'backbone.layer4']
    wrapper: 'DistributedDataParallel'
    requires_grad: True
  optimizer:
    type: 'Adam'
    params:
      lr: 0.001
  scheduler:
    type: 'MultiStepLR'
    params:
      milestones: [30, 40]
      gamma: 0.1
  criterion:
    type: 'GeneralizedCustomLoss'
    org_term:
      factor: 0.0
    sub_terms:
      layer2:
        criterion:
          type: 'MSELoss'
          params:
            reduction: 'sum'
        params:
          input:
            is_from_teacher: False
            module_path: 'backbone.layer2'
            io: 'output'
          target:
            is_from_teacher: True
            module_path: 'backbone.layer2'
            io: 'output'
        factor: 1.0
      layer3:
        criterion:
          type: 'MSELoss'
          params:
            reduction: 'sum'
        params:
          input:
            is_from_teacher: False
            module_path: 'backbone.layer3'
            io: 'output'
          target:
            is_from_teacher: True
            module_path: 'backbone.layer3'
            io: 'output'
        factor: 1.0
      layer4:
        criterion:
          type: 'MSELoss'
          params:
            reduction: 'sum'
        params:
          input:
            is_from_teacher: False
            module_path: 'backbone.layer4'
            io: 'output'
          target:
            is_from_teacher: True
            module_path: 'backbone.layer4'
            io: 'output'
        factor: 1.0

test:
  test_data_loader:
    dataset_id: *pascal_val
    random_sample: False
    batch_size: 1
    num_workers: 16
    collate_fn: 'pascal_seg_eval_collate_fn'

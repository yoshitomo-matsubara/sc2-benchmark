datasets:
  ilsvrc2012:
    name: &dataset_name 'ilsvrc2012'
    type: 'ImageFolder'
    root: &root_dir !join ['~/dataset/', *dataset_name]
    splits:
      train:
        dataset_id: &imagenet_train !join [*dataset_name, '/train']
        params:
          root: !join [*root_dir, '/train']
          transform_params:
            - type: 'RandomResizedCrop'
              params:
                size: &input_size [224, 224]
            - type: 'RandomHorizontalFlip'
              params:
                p: 0.5
            - &totensor
              type: 'ToTensor'
              params:
            - &normalize
              type: 'Normalize'
              params:
                mean: [0.485, 0.456, 0.406]
                std: [0.229, 0.224, 0.225]
      val:
        dataset_id: &imagenet_val !join [*dataset_name, '/val']
        params:
          root: !join [*root_dir, '/val']
          transform_params:
            - type: 'Resize'
              params:
                size: 256
            - type: 'CenterCrop'
              params:
                size: *input_size
            - *totensor
            - *normalize

models:
  model:
    name: &model_name 'splittable_resnet'
    params:
      num_classes: 1000
      pretrained: False
      bottleneck_config:
        name: 'FPBasedResNetBottleneck'
        params:
          num_bottleneck_channels: 24
          num_target_channels: 256
      resnet_name: 'resnet50'
      pre_transform_params:
      skips_avgpool: False
      skips_fc: False
      analysis_config:
        analyzes_after_compress: True
        analyzer_configs:
          - type: 'FileSizeAnalyzer'
            params:
              unit: 'KB'
    experiment: &experiment !join [*dataset_name, '-', *model_name, '50-fp-beta1.024e-7']
    ckpt: !join ['./resource/ckpt/ilsvrc2012/supervised_compression/end-to-end/', *experiment, '.pt']

train:
  log_freq: 1000
  epoch_to_update: &epoch_to_update 60
  num_epochs: *epoch_to_update
  train_data_loader:
    dataset_id: *imagenet_train
    random_sample: True
    batch_size: 256
    num_workers: 16
    cache_output:
  val_data_loader:
    dataset_id: *imagenet_val
    random_sample: False
    batch_size: 32
    num_workers: 16
  model:
    forward_hook:
      input: []
      output: ['bottleneck_layer.entropy_bottleneck']
    wrapper: 'DistributedDataParallel'
    requires_grad: True
  optimizer:
    type: 'Adam'
    params:
      lr: 0.001
      weight_decay: 0.0001
  scheduler:
    type: 'CosineAnnealingLR'
    params:
      T_max: 300000
    scheduling_step: 1
  criterion:
    type: 'GeneralizedCustomLoss'
    org_term:
      criterion:
        type: 'CrossEntropyLoss'
        params:
          reduction: 'mean'
      factor: 1.0
    sub_terms:
      bpp:
        criterion:
          type: 'BppLoss'
          params:
            entropy_module_path: 'bottleneck_layer.entropy_bottleneck'
            reduction: 'batchmean'
        factor: 1.024e-7

test:
  test_data_loader:
    dataset_id: *imagenet_val
    random_sample: False
    batch_size: 1
    num_workers: 16

datasets:
  &imagenet_val ilsvrc2012/val: !import_call
    _name: &dataset_name 'ilsvrc2012'
    _root: &root_dir !join ['~/datasets/', *dataset_name]
    key: 'torchvision.datasets.ImageFolder'
    init:
      kwargs:
        root: !join [*root_dir, '/val']
        transform: !import_call
          key: 'torchvision.transforms.Compose'
          init:
            kwargs:
              transforms:
                - !import_call
                  key: 'torchvision.transforms.Resize'
                  init:
                    kwargs:
                      size: 507
                      interpolation:
                        !getattr
                        - !import_get
                          key: 'torchvision.transforms.functional.InterpolationMode'
                        - 'BICUBIC'
                - !import_call
                  key: 'torchvision.transforms.CenterCrop'
                  init:
                    kwargs:
                      size: &input_size [475, 475]
                - !import_call
                  key: 'torchvision.transforms.ToTensor'
                  init:
                - !import_call
                  key: 'sc2bench.transforms.misc.AdaptivePad'
                  init:
                    kwargs:
                      fill: 0
                      factor: 64

models:
  model:
    name: 'NeuralInputCompressionClassifier'
    params:
      post_transform_params:
        - type: 'CenterCrop'
          params:
            size: *input_size
        - type: 'Normalize'
          params:
            mean: [0.485, 0.456, 0.406]
            std: [0.229, 0.224, 0.225]
      analysis_config:
        analyzes_after_compress: True
        analyzer_configs:
          - type: 'FileSizeAnalyzer'
            params:
              unit: 'KB'
    compression_model:
      name: 'bmshj2018_hyperprior'
      params:
        pretrained: True
        quality: 8
        metric: 'mse'
      ckpt: './resource/ckpt/input_compression/scale_hyperprior.pt'
    classification_model:
      name: &model_name 'tf_efficientnet_l2_ns'
      repo_or_dir: 'rwightman/pytorch-image-models'
      params:
        num_classes: 1000
        pretrained: True
      experiment: &experiment !join [*dataset_name, '-', *model_name]
      ckpt: !join ['./imagenet/vanilla/', *experiment, '.pt']

test:
  test_data_loader:
    dataset_id: *imagenet_val
    random_sample: False
    batch_size: 1
    num_workers: 16
